# -*- coding: utf-8 -*-
"""PROJECT.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1syaSSlGeIFUu5M7xhgvnJFdibif1MJF7
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('marketing_campaign_dataset.csv')
df.head()

df.tail()

df.describe()

df.isnull().sum()

print (df.shape)

#What's the Campaign_Type with the best ROI for each Target_Audience?
print(df['Campaign_Type'].unique())
print(df['Target_Audience'].unique())

roi_by_campaign_audience = df.groupby(['Campaign_Type', 'Target_Audience'])['ROI'].mean().reset_index()

roi_by_campaign_audience = roi_by_campaign_audience.sort_values(by=['Target_Audience', 'ROI'], ascending=[True, False])
print(roi_by_campaign_audience)

best_campaign_by_audience = roi_by_campaign_audience.loc[roi_by_campaign_audience.groupby('Target_Audience')['ROI'].idxmax()]

print(best_campaign_by_audience)

#Visualising the relation between the Campaign_Type and ROI for each Target_Audience
plt.figure(figsize=(10, 6))

sns.barplot(x='Target_Audience', y='ROI', hue='Campaign_Type', data=best_campaign_by_audience)

plt.title('Best Campaign Type by ROI for Each Target Audience')
plt.xlabel('Target Audience')
plt.ylabel('Best ROI')

plt.show()

#What's the channel_used with the best engaegment_score for each target_audience?
print(df['Channel_Used'].unique())
print(df['Target_Audience'].unique())

# Grouping the data by 'channel_used' and 'target_audience' and calculating the mean engagement score
engagement_by_channel_audience = df.groupby(['Channel_Used', 'Target_Audience'])['Engagement_Score'].mean().reset_index()

# Sort the results by engagement score for better visualization and understanding
engagement_by_channel_audience = engagement_by_channel_audience.sort_values(by='Engagement_Score', ascending=False)
print(engagement_by_channel_audience)

#Visualising the relation between the channel_used with the highest engagement_score for each target_audience
plt.figure(figsize=(12, 8))
sns.barplot(x='Channel_Used', y='Engagement_Score', hue='Target_Audience', data=engagement_by_channel_audience)
plt.title('Engagement Score by Channel Used and Target Audience')
plt.xlabel('Channel Used')
plt.ylabel('Average Engagement Score')

plt.show()

#What's the Duration for the best ROI for each Channel_Used?
print(df['Channel_Used'].unique())
print(df['Duration'].unique())

#Grouping the data for Channel used and Duration with the mean ROI
roi_by_channel_duration = df.groupby(['Channel_Used', 'Duration'])['ROI'].mean().reset_index()

# Sort the results by ROI for better visualization and understanding
roi_by_channel_duration = roi_by_channel_duration.sort_values(by=['Channel_Used', 'ROI'], ascending=[True, False])
print(roi_by_channel_duration)

best_duration_by_channel = roi_by_channel_duration.loc[roi_by_channel_duration.groupby('Channel_Used')['ROI'].idxmax()]

print(best_duration_by_channel)

#Visualising the Relation betweenn the Duration and ROI for each Channel_Used
plt.figure(figsize=(10, 6))
sns.barplot(x='Channel_Used', y='ROI', hue='Duration', data=best_duration_by_channel)

plt.title('Best Duration by ROI for Each Channel Used')
plt.xlabel('Channel Used')
plt.ylabel('Best ROI')

plt.show()

#What's the best Channel_Used with the best Conversion_Rate for each Target_Audience?
print(df['Channel_Used'].unique())
print(df['Target_Audience'].unique())

# Grouping the data by 'Channel_Used' and 'Target_Audience' and calculating the mean Conversion_Rate
conversion_rate_by_channel_audience = df.groupby(['Channel_Used', 'Target_Audience'])['Conversion_Rate'].mean().reset_index()

# Sort the results by Conversion_Rate for better visualization and understanding
conversion_rate_by_channel_audience = conversion_rate_by_channel_audience.sort_values(by=['Target_Audience', 'Conversion_Rate'], ascending=[True, False])
print(conversion_rate_by_channel_audience)

best_channel_by_audience = conversion_rate_by_channel_audience.loc[conversion_rate_by_channel_audience.groupby('Target_Audience')['Conversion_Rate'].idxmax()]

print(best_channel_by_audience)

#Visualising the relation between the Channel_Used and Conversion_Rate for each Target_Audience
plt.figure(figsize=(10, 6))
sns.barplot(x='Target_Audience', y='Conversion_Rate', hue='Channel_Used', data=best_channel_by_audience)

plt.title('Best Channel Used by Conversion Rate for Each Target Audience')
plt.xlabel('Target Audience')
plt.ylabel('Best Conversion Rate')

plt.show()

#Which Target_Audience has the lowest Engagement_Score for each Channel_Used?
print(df['Channel_Used'].unique())
print(df['Target_Audience'].unique())

engagement_by_channel_audience = df.groupby(['Channel_Used', 'Target_Audience'])['Engagement_Score'].mean().reset_index()

# Sort the results by Engagement_Score for better visualization and understanding
engagement_by_channel_audience = engagement_by_channel_audience.sort_values(by=['Channel_Used', 'Engagement_Score'], ascending=[True, True])
print(engagement_by_channel_audience)

# Finding the Target_Audience with the lowest Engagement_Score for each Channel_Used
lowest_engagement_by_channel = engagement_by_channel_audience.loc[engagement_by_channel_audience.groupby('Channel_Used')['Engagement_Score'].idxmin()]

print(lowest_engagement_by_channel)

#Visualising the relation between the Target_Audience and Engagemnet_Score for each Channel_Used
plt.figure(figsize=(10, 6))
sns.barplot(x='Channel_Used', y='Engagement_Score', hue='Target_Audience', data=lowest_engagement_by_channel)

plt.title('Lowest Engagement Score by Target Audience for Each Channel Used')
plt.xlabel('Channel Used')
plt.ylabel('Lowest Engagement Score')

plt.show()

#Which Language has the highest Engagement_Score for each Channel_Used?
print(df['Channel_Used'].unique())
print(df['Language'].unique())

#Grouping Language with the Channel_Used with the Engagement_Score mean
engagement_by_channel_language = df.groupby(['Channel_Used', 'Language'])['Engagement_Score'].mean().reset_index()

# Sort the results by Engagement_Score for better visualization and understanding
engagement_by_channel_language = engagement_by_channel_language.sort_values(by=['Channel_Used', 'Engagement_Score'], ascending=[True, False])
print(engagement_by_channel_language)

highest_engagement_by_channel = engagement_by_channel_language.loc[engagement_by_channel_language.groupby('Channel_Used')['Engagement_Score'].idxmax()]

print(highest_engagement_by_channel)

#Visualising the relationn between the Language and Engagement_Score for each Channel_Used
plt.figure(figsize=(10, 6))

sns.barplot(x='Channel_Used', y='Engagement_Score', hue='Language', data=highest_engagement_by_channel)

plt.title('Language with the Highest Engagement Score for Each Channel Used')
plt.xlabel('Channel Used')
plt.ylabel('Highest Engagement Score')

plt.show()